---
import { Image, getImage } from "astro:assets";
import type { ImageMetadata } from "astro";

import ExifReader from "exifreader";

import "../styles/carousel.css";
import "../styles/global.css";

let images: Record<string, any>[] = Object.values(
  import.meta.glob("../assets/*.jpg", { eager: true })
);

const slides: { caption: string; image: ImageMetadata }[] = await Promise.all(
  images.map(async (image_path) => {
    const img = image_path.default;
    const path = img.fsPath;

    const exif = await ExifReader.load(path, { async: true });
    let caption = exif["title"].description;
    let image = (await getImage({ src: img, format: "jpg" })).options
      .src as ImageMetadata;

    return {
      caption,
      image,
    };
  })
);
---

<div>
  <div class="carousel">
    <div class="slides-wrapper">
      <div class="left"></div>
      <div class="right"></div>
      <div class="slides">
        {
          slides.map(({ caption, image }, idx) => (
            <div class="slide" style={`order: ${idx};`}>
              <Image
                src={image}
                alt={caption}
                widths={[400, 800, image.width]}
                sizes={`(max-width: 400px) 400px, (max-width: 800px) 800px`}
              />
              <div class="caption">
                <span>{caption}</span>
                <span>
                  {idx + 1}/{slides.length}
                </span>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</div>

<script>
  function setupCarousel() {
    let carousel = document.querySelector(".carousel") as HTMLDivElement;
    let currentSlide = 0;
    const numSlides = 13;

    function modulo(number: number, mod: number) {
      let result = number % mod;
      if (result < 0) {
        result += mod;
      }
      return result;
    }

    let left = document.querySelector(".left");
    let right = document.querySelector(".right");

    if (left && right) {
      left.addEventListener("click", function (e) {
        e.preventDefault();
        currentSlide = modulo(currentSlide - 1, numSlides);
        carousel.style.setProperty("--current-slide", `${currentSlide}`);
      });

      right.addEventListener("click", function (e) {
        e.preventDefault();
        currentSlide = modulo(currentSlide + 1, numSlides);
        carousel.style.setProperty("--current-slide", `${currentSlide}`);
      });
    }
  }

  // Run on initial load
  setupCarousel();

  // Re-run after view transitions
  document.addEventListener("astro:after-swap", setupCarousel);
</script>
