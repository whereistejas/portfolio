---
import { getCollection } from "astro:content";
import Page from "../layouts/page.astro";
import Textorlink from "../components/textorlink.astro";

// Fetch queue items from the content collection
// Sort items by LLM-determined order for minimal context switching
const queueEntries = await getCollection("readwise-queue");
queueEntries.sort((a, b) => a.data.order - b.data.order);

const headers = [
	{ type: "text", content: "READING INBOX" },
	{ type: "link", content: "CLOSE", href: "/" },
];
---

<Page title="Reading Inbox">
	<Fragment slot="header">
		{
			headers.map((el) => (
				<Textorlink type={el.type} content={el.content} href={el.href} />
			))
		}
	</Fragment>
	<Fragment slot="main">
		<div class="archive_main">
			<div class="items">
				{
					queueEntries.map((item, idx) => (
						<div class="item">
							<div class="links">
								<a
									href={item.data.url}
									target="_blank"
									rel="noopener noreferrer"
									class="title"
								>
									{item.data.title}
								</a>
								<a
									href={`https://read.readwise.io/new/read/${item.data.id}`}
									target="_blank"
									rel="noopener noreferrer"
									class="readwise"
								>
									â“‡
								</a>
							</div>
							<div class="info">
							<label class="tags" for={`toggle-summary-${idx}`}>
								{[...item.data.tags]
									.sort((a, b) =>
										a.toLowerCase().localeCompare(b.toLowerCase())
									)
									.map((tag) => (
										<span class="tag">{tag}</span>
									))}
							</label>
							<input type="checkbox" id={`toggle-summary-${idx}`} class="toggle"/>
							<div class="summary">
								<div> {item.data.summary} </div>
							</div>
							</div>
						</div>
					))
				}
			</div>
		</div>
	</Fragment>
</Page>
