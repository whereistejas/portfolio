---
import { getCollection } from "astro:content";
import Page from "../layouts/page.astro";
import Textorlink from "../components/textorlink.astro";
import Row from "../components/row.astro";

// Fetch archive items from the content collection
const archiveEntries = await getCollection("readwise-archive");

// Group archive items by their dateGroup field
// Items are already sorted by date from the loader, so groups will be in correct order
const items = new Map<string, (typeof archiveEntries)[0][]>();
for (const entry of archiveEntries) {
  const dateGroup = entry.data.dateGroup;
  if (!items.has(dateGroup)) {
    items.set(dateGroup, []);
  }
  items.get(dateGroup)?.push(entry);
}

const headers = [
  { type: "text", content: "READING LIST" },
  { type: "link", content: "CLOSE", href: "/" },
];
---

<Page title="Reading List">
  <Fragment slot="header">
    {
      headers.map((el) => (
        <Textorlink type={el.type} content={el.content} href={el.href} />
      ))
    }
  </Fragment>
  <Fragment slot="main">
    <div class="archive_main">
      {
        Array.from(items.entries()).map(([date, items]) => (
          <Row>
            <Fragment slot="key">{date === "" ? "XYZ" : date}</Fragment>
            <Fragment slot="value">
              <div class="items">
                {items.map((item) => (
                  <div class="item">
                    <a
                      href={item.data.url.href}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="title"
                    >
                      {item.data.title}
                    </a>
                    {/* <p class="summary">{item.summary}</p> */}
                  </div>
                ))}
              </div>
            </Fragment>
          </Row>
        ))
      }
    </div>
  </Fragment>
</Page>
